version: 2.1

orbs:
  node: circleci/node@7.0.0

executors:
  node-executor:
    docker:
      - image: node:18  # Imagen base para Node.js
  docker-executor:
    docker:
      - image: docker:20.10  # Imagen base para Docker
        auth:
          username: $DOCKER_USER  # Variables de entorno configuradas en CircleCI
          password: $DOCKER_PASS

jobs:
  pre_build:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Instalar dependencias Backend
          command: |
            cd Backend
            npm install
      - run:
          name: Instalar dependencias Frontend
          command: |
            cd Frontend
            npm install
      - run:
          name: Validación estática Backend
          command: |
            cd Backend
            npm install eslint
            npx eslint .
      - run:
          name: Validación estática Frontend
          command: |
            cd Frontend
            npm install eslint
            npx eslint .
      - run:
          name: Análisis de dependencias
          command: |
            cd Backend
            npm audit --production || true
            cd ../Frontend
            npm audit --production || true

  build:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Construir Backend
          command: |
            cd Backend
            npm run build
      - run:
          name: Construir Frontend
          command: |
            cd Frontend
            npm run build

  test:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Ejecutar pruebas Backend
          command: |
            cd Backend
            npm test

  deploy:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.8
      - run:
          name: Construir imágenes Docker
          command: |
            docker build -t backend-app ./Backend
            docker build -t frontend-app ./Frontend
      - run:
          name: Desplegar Backend y Frontend
          command: |
            docker run -d -p 3000:3000 --name backend backend-app
            docker run -d -p 8080:8080 --name frontend frontend-app

workflows:
  version: 2
  pipeline:
    jobs:
      - pre_build
      - build:
          requires:
            - pre_build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
