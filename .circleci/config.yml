version: 2.1

orbs:
  node: circleci/node@7.0.0

executors:
  node-executor:
    docker:
      - image: node:18  # Imagen base para Node.js

jobs:
  validations:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-dependencies-Backend-{{ checksum "Backend/package-lock.json" }}
            - node-dependencies-Frontend-{{ checksum "Frontend/package-lock.json" }}
      - run:
          name: Instalar dependencias Backend
          command: |
            cd Backend
            npm ci
      - run:
          name: Instalar dependencias Frontend
          command: |
            cd Frontend
            npm ci
      - save_cache:
          key: node-dependencies-Backend-{{ checksum "Backend/package-lock.json" }}
          paths:
            - Backend/node_modules
      - save_cache:
          key: node-dependencies-Frontend-{{ checksum "Frontend/package-lock.json" }}
          paths:
            - Frontend/node_modules
      - run:
          name: Validación estática Backend
          command: |
            cd Backend
            npx eslint --fix .
      - run:
          name: Validación estática Frontend
          command: |
            cd Frontend
            npx eslint --fix .
      - run:
          name: Análisis de dependencias Backend
          command: |
            cd Backend
            npm audit --production || echo "Audit completado con advertencias"
      - run:
          name: Análisis de dependencias Frontend
          command: |
            cd Frontend
            npm audit --production || echo "Audit completado con advertencias"

  tests:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-dependencies-Backend-{{ checksum "Backend/package-lock.json" }}
      - run:
          name: Ejecutar pruebas Backend
          command: |
            cd Backend
            npm test

  trigger-main-pipeline:
    executor: node-executor
    steps:
      - run:
          name: Trigger pipeline on main branch
          command: |
            curl -u ${CIRCLECI_API_TOKEN}: \
                 -X POST \
                 -H "Content-Type: application/json" \
                 -d '{
                       "branch": "main"
                     }' \
                 https://circleci.com/api/v2/project/github/JILogio/Minicore/pipeline

workflows:
  version: 2
  pipeline:
    jobs:
      - validations
      - tests:
          requires:
            - validations
      - trigger-main-pipeline:
          requires:
            - tests
            