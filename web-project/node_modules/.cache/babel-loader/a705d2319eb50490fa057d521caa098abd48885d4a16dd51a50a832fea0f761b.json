{"ast":null,"code":"import axios from 'axios';\nimport Global from '../Global';\nexport default {\n  data() {\n    return {\n      text: '',\n      encryptedText: '',\n      decryptedText: ''\n    };\n  },\n  methods: {\n    async encryptText() {\n      const url = Global.url;\n      try {\n        const response = await axios.post('http://localhost:3900/encrypt', {\n          text: this.text\n        });\n        this.encryptedText = response.data.ciphertext;\n      } catch (error) {\n        console.error('Error encriptando texto:', error);\n      }\n    },\n    async decryptText() {\n      const url = Global.url;\n      try {\n        const response = await axios.post('http://localhost:3900/decrypt', {\n          ciphertext: this.encryptedText\n        });\n        this.decryptedText = response.data.plaintext;\n      } catch (error) {\n        console.error('Error desencriptando texto:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Global","data","text","encryptedText","decryptedText","methods","encryptText","url","response","post","ciphertext","error","console","decryptText","plaintext"],"sources":["C:\\VsCode\\Minicore\\web-project\\src\\EncriptionPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Encriptar y Desencriptar Datos</h1>\r\n      <input v-model=\"text\" placeholder=\"Introduce texto para encriptar\">\r\n      <button @click=\"encryptText\">Encriptar</button>\r\n      <p>Encriptado: {{ encryptedText }}</p>\r\n      <button @click=\"decryptText\">Desencriptar</button>\r\n      <p>Desencriptado: {{ decryptedText }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import Global from '../Global'\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        text: '',\r\n        encryptedText: '',\r\n        decryptedText: '',\r\n      };\r\n    },\r\n    methods: {\r\n      async encryptText() {\r\n        const url = Global.url;\r\n        try {\r\n          const response = await axios.post('http://localhost:3900/encrypt', { text: this.text });\r\n          this.encryptedText = response.data.ciphertext;\r\n        } catch (error) {\r\n          console.error('Error encriptando texto:', error);\r\n        }\r\n      },\r\n      async decryptText() {\r\n        const url = Global.url;\r\n        try {\r\n          const response = await axios.post('http://localhost:3900/decrypt', { ciphertext: this.encryptedText });\r\n          this.decryptedText = response.data.plaintext;\r\n        } catch (error) {\r\n          console.error('Error desencriptando texto:', error);\r\n        }\r\n      },\r\n    },\r\n  };\r\n</script>\r\n  "],"mappings":"AAYE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,WAAU;AAE7B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,MAAMC,GAAE,GAAIP,MAAM,CAACO,GAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,+BAA+B,EAAE;UAAEP,IAAI,EAAE,IAAI,CAACA;QAAK,CAAC,CAAC;QACvF,IAAI,CAACC,aAAY,GAAIK,QAAQ,CAACP,IAAI,CAACS,UAAU;MAC/C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAClB,MAAMN,GAAE,GAAIP,MAAM,CAACO,GAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,+BAA+B,EAAE;UAAEC,UAAU,EAAE,IAAI,CAACP;QAAc,CAAC,CAAC;QACtG,IAAI,CAACC,aAAY,GAAII,QAAQ,CAACP,IAAI,CAACa,SAAS;MAC9C,EAAE,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}